// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv2d_kernel_conv2d_kernel,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu37p-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.190000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1266,HLS_SYN_LUT=2022,HLS_VERSION=2024_1}" *)

module conv2d_kernel (
        ap_clk,
        ap_rst_n,
        m_axi_HBM0_AWVALID,
        m_axi_HBM0_AWREADY,
        m_axi_HBM0_AWADDR,
        m_axi_HBM0_AWID,
        m_axi_HBM0_AWLEN,
        m_axi_HBM0_AWSIZE,
        m_axi_HBM0_AWBURST,
        m_axi_HBM0_AWLOCK,
        m_axi_HBM0_AWCACHE,
        m_axi_HBM0_AWPROT,
        m_axi_HBM0_AWQOS,
        m_axi_HBM0_AWREGION,
        m_axi_HBM0_AWUSER,
        m_axi_HBM0_WVALID,
        m_axi_HBM0_WREADY,
        m_axi_HBM0_WDATA,
        m_axi_HBM0_WSTRB,
        m_axi_HBM0_WLAST,
        m_axi_HBM0_WID,
        m_axi_HBM0_WUSER,
        m_axi_HBM0_ARVALID,
        m_axi_HBM0_ARREADY,
        m_axi_HBM0_ARADDR,
        m_axi_HBM0_ARID,
        m_axi_HBM0_ARLEN,
        m_axi_HBM0_ARSIZE,
        m_axi_HBM0_ARBURST,
        m_axi_HBM0_ARLOCK,
        m_axi_HBM0_ARCACHE,
        m_axi_HBM0_ARPROT,
        m_axi_HBM0_ARQOS,
        m_axi_HBM0_ARREGION,
        m_axi_HBM0_ARUSER,
        m_axi_HBM0_RVALID,
        m_axi_HBM0_RREADY,
        m_axi_HBM0_RDATA,
        m_axi_HBM0_RLAST,
        m_axi_HBM0_RID,
        m_axi_HBM0_RUSER,
        m_axi_HBM0_RRESP,
        m_axi_HBM0_BVALID,
        m_axi_HBM0_BREADY,
        m_axi_HBM0_BRESP,
        m_axi_HBM0_BID,
        m_axi_HBM0_BUSER,
        m_axi_HBM1_AWVALID,
        m_axi_HBM1_AWREADY,
        m_axi_HBM1_AWADDR,
        m_axi_HBM1_AWID,
        m_axi_HBM1_AWLEN,
        m_axi_HBM1_AWSIZE,
        m_axi_HBM1_AWBURST,
        m_axi_HBM1_AWLOCK,
        m_axi_HBM1_AWCACHE,
        m_axi_HBM1_AWPROT,
        m_axi_HBM1_AWQOS,
        m_axi_HBM1_AWREGION,
        m_axi_HBM1_AWUSER,
        m_axi_HBM1_WVALID,
        m_axi_HBM1_WREADY,
        m_axi_HBM1_WDATA,
        m_axi_HBM1_WSTRB,
        m_axi_HBM1_WLAST,
        m_axi_HBM1_WID,
        m_axi_HBM1_WUSER,
        m_axi_HBM1_ARVALID,
        m_axi_HBM1_ARREADY,
        m_axi_HBM1_ARADDR,
        m_axi_HBM1_ARID,
        m_axi_HBM1_ARLEN,
        m_axi_HBM1_ARSIZE,
        m_axi_HBM1_ARBURST,
        m_axi_HBM1_ARLOCK,
        m_axi_HBM1_ARCACHE,
        m_axi_HBM1_ARPROT,
        m_axi_HBM1_ARQOS,
        m_axi_HBM1_ARREGION,
        m_axi_HBM1_ARUSER,
        m_axi_HBM1_RVALID,
        m_axi_HBM1_RREADY,
        m_axi_HBM1_RDATA,
        m_axi_HBM1_RLAST,
        m_axi_HBM1_RID,
        m_axi_HBM1_RUSER,
        m_axi_HBM1_RRESP,
        m_axi_HBM1_BVALID,
        m_axi_HBM1_BREADY,
        m_axi_HBM1_BRESP,
        m_axi_HBM1_BID,
        m_axi_HBM1_BUSER,
        m_axi_HBM2_AWVALID,
        m_axi_HBM2_AWREADY,
        m_axi_HBM2_AWADDR,
        m_axi_HBM2_AWID,
        m_axi_HBM2_AWLEN,
        m_axi_HBM2_AWSIZE,
        m_axi_HBM2_AWBURST,
        m_axi_HBM2_AWLOCK,
        m_axi_HBM2_AWCACHE,
        m_axi_HBM2_AWPROT,
        m_axi_HBM2_AWQOS,
        m_axi_HBM2_AWREGION,
        m_axi_HBM2_AWUSER,
        m_axi_HBM2_WVALID,
        m_axi_HBM2_WREADY,
        m_axi_HBM2_WDATA,
        m_axi_HBM2_WSTRB,
        m_axi_HBM2_WLAST,
        m_axi_HBM2_WID,
        m_axi_HBM2_WUSER,
        m_axi_HBM2_ARVALID,
        m_axi_HBM2_ARREADY,
        m_axi_HBM2_ARADDR,
        m_axi_HBM2_ARID,
        m_axi_HBM2_ARLEN,
        m_axi_HBM2_ARSIZE,
        m_axi_HBM2_ARBURST,
        m_axi_HBM2_ARLOCK,
        m_axi_HBM2_ARCACHE,
        m_axi_HBM2_ARPROT,
        m_axi_HBM2_ARQOS,
        m_axi_HBM2_ARREGION,
        m_axi_HBM2_ARUSER,
        m_axi_HBM2_RVALID,
        m_axi_HBM2_RREADY,
        m_axi_HBM2_RDATA,
        m_axi_HBM2_RLAST,
        m_axi_HBM2_RID,
        m_axi_HBM2_RUSER,
        m_axi_HBM2_RRESP,
        m_axi_HBM2_BVALID,
        m_axi_HBM2_BREADY,
        m_axi_HBM2_BRESP,
        m_axi_HBM2_BID,
        m_axi_HBM2_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 74'd1;
parameter    ap_ST_fsm_state2 = 74'd2;
parameter    ap_ST_fsm_state3 = 74'd4;
parameter    ap_ST_fsm_state4 = 74'd8;
parameter    ap_ST_fsm_state5 = 74'd16;
parameter    ap_ST_fsm_state6 = 74'd32;
parameter    ap_ST_fsm_state7 = 74'd64;
parameter    ap_ST_fsm_state8 = 74'd128;
parameter    ap_ST_fsm_state9 = 74'd256;
parameter    ap_ST_fsm_state10 = 74'd512;
parameter    ap_ST_fsm_state11 = 74'd1024;
parameter    ap_ST_fsm_state12 = 74'd2048;
parameter    ap_ST_fsm_state13 = 74'd4096;
parameter    ap_ST_fsm_state14 = 74'd8192;
parameter    ap_ST_fsm_state15 = 74'd16384;
parameter    ap_ST_fsm_state16 = 74'd32768;
parameter    ap_ST_fsm_state17 = 74'd65536;
parameter    ap_ST_fsm_state18 = 74'd131072;
parameter    ap_ST_fsm_state19 = 74'd262144;
parameter    ap_ST_fsm_state20 = 74'd524288;
parameter    ap_ST_fsm_state21 = 74'd1048576;
parameter    ap_ST_fsm_state22 = 74'd2097152;
parameter    ap_ST_fsm_state23 = 74'd4194304;
parameter    ap_ST_fsm_state24 = 74'd8388608;
parameter    ap_ST_fsm_state25 = 74'd16777216;
parameter    ap_ST_fsm_state26 = 74'd33554432;
parameter    ap_ST_fsm_state27 = 74'd67108864;
parameter    ap_ST_fsm_state28 = 74'd134217728;
parameter    ap_ST_fsm_state29 = 74'd268435456;
parameter    ap_ST_fsm_state30 = 74'd536870912;
parameter    ap_ST_fsm_state31 = 74'd1073741824;
parameter    ap_ST_fsm_state32 = 74'd2147483648;
parameter    ap_ST_fsm_state33 = 74'd4294967296;
parameter    ap_ST_fsm_state34 = 74'd8589934592;
parameter    ap_ST_fsm_state35 = 74'd17179869184;
parameter    ap_ST_fsm_state36 = 74'd34359738368;
parameter    ap_ST_fsm_state37 = 74'd68719476736;
parameter    ap_ST_fsm_state38 = 74'd137438953472;
parameter    ap_ST_fsm_state39 = 74'd274877906944;
parameter    ap_ST_fsm_state40 = 74'd549755813888;
parameter    ap_ST_fsm_state41 = 74'd1099511627776;
parameter    ap_ST_fsm_state42 = 74'd2199023255552;
parameter    ap_ST_fsm_state43 = 74'd4398046511104;
parameter    ap_ST_fsm_state44 = 74'd8796093022208;
parameter    ap_ST_fsm_state45 = 74'd17592186044416;
parameter    ap_ST_fsm_state46 = 74'd35184372088832;
parameter    ap_ST_fsm_state47 = 74'd70368744177664;
parameter    ap_ST_fsm_state48 = 74'd140737488355328;
parameter    ap_ST_fsm_state49 = 74'd281474976710656;
parameter    ap_ST_fsm_state50 = 74'd562949953421312;
parameter    ap_ST_fsm_state51 = 74'd1125899906842624;
parameter    ap_ST_fsm_state52 = 74'd2251799813685248;
parameter    ap_ST_fsm_state53 = 74'd4503599627370496;
parameter    ap_ST_fsm_state54 = 74'd9007199254740992;
parameter    ap_ST_fsm_state55 = 74'd18014398509481984;
parameter    ap_ST_fsm_state56 = 74'd36028797018963968;
parameter    ap_ST_fsm_state57 = 74'd72057594037927936;
parameter    ap_ST_fsm_state58 = 74'd144115188075855872;
parameter    ap_ST_fsm_state59 = 74'd288230376151711744;
parameter    ap_ST_fsm_state60 = 74'd576460752303423488;
parameter    ap_ST_fsm_state61 = 74'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 74'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 74'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 74'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 74'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 74'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 74'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 74'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 74'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 74'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 74'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 74'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 74'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 74'd9444732965739290427392;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_HBM0_ID_WIDTH = 1;
parameter    C_M_AXI_HBM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_HBM0_DATA_WIDTH = 64;
parameter    C_M_AXI_HBM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HBM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HBM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_HBM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_HBM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_HBM0_USER_VALUE = 0;
parameter    C_M_AXI_HBM0_PROT_VALUE = 0;
parameter    C_M_AXI_HBM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_HBM1_ID_WIDTH = 1;
parameter    C_M_AXI_HBM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_HBM1_DATA_WIDTH = 32;
parameter    C_M_AXI_HBM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HBM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HBM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_HBM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_HBM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_HBM1_USER_VALUE = 0;
parameter    C_M_AXI_HBM1_PROT_VALUE = 0;
parameter    C_M_AXI_HBM1_CACHE_VALUE = 3;
parameter    C_M_AXI_HBM2_ID_WIDTH = 1;
parameter    C_M_AXI_HBM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_HBM2_DATA_WIDTH = 64;
parameter    C_M_AXI_HBM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_HBM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_HBM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_HBM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_HBM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_HBM2_USER_VALUE = 0;
parameter    C_M_AXI_HBM2_PROT_VALUE = 0;
parameter    C_M_AXI_HBM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_HBM0_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_HBM1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_HBM2_WSTRB_WIDTH = (64 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_HBM0_AWVALID;
input   m_axi_HBM0_AWREADY;
output  [C_M_AXI_HBM0_ADDR_WIDTH - 1:0] m_axi_HBM0_AWADDR;
output  [C_M_AXI_HBM0_ID_WIDTH - 1:0] m_axi_HBM0_AWID;
output  [7:0] m_axi_HBM0_AWLEN;
output  [2:0] m_axi_HBM0_AWSIZE;
output  [1:0] m_axi_HBM0_AWBURST;
output  [1:0] m_axi_HBM0_AWLOCK;
output  [3:0] m_axi_HBM0_AWCACHE;
output  [2:0] m_axi_HBM0_AWPROT;
output  [3:0] m_axi_HBM0_AWQOS;
output  [3:0] m_axi_HBM0_AWREGION;
output  [C_M_AXI_HBM0_AWUSER_WIDTH - 1:0] m_axi_HBM0_AWUSER;
output   m_axi_HBM0_WVALID;
input   m_axi_HBM0_WREADY;
output  [C_M_AXI_HBM0_DATA_WIDTH - 1:0] m_axi_HBM0_WDATA;
output  [C_M_AXI_HBM0_WSTRB_WIDTH - 1:0] m_axi_HBM0_WSTRB;
output   m_axi_HBM0_WLAST;
output  [C_M_AXI_HBM0_ID_WIDTH - 1:0] m_axi_HBM0_WID;
output  [C_M_AXI_HBM0_WUSER_WIDTH - 1:0] m_axi_HBM0_WUSER;
output   m_axi_HBM0_ARVALID;
input   m_axi_HBM0_ARREADY;
output  [C_M_AXI_HBM0_ADDR_WIDTH - 1:0] m_axi_HBM0_ARADDR;
output  [C_M_AXI_HBM0_ID_WIDTH - 1:0] m_axi_HBM0_ARID;
output  [7:0] m_axi_HBM0_ARLEN;
output  [2:0] m_axi_HBM0_ARSIZE;
output  [1:0] m_axi_HBM0_ARBURST;
output  [1:0] m_axi_HBM0_ARLOCK;
output  [3:0] m_axi_HBM0_ARCACHE;
output  [2:0] m_axi_HBM0_ARPROT;
output  [3:0] m_axi_HBM0_ARQOS;
output  [3:0] m_axi_HBM0_ARREGION;
output  [C_M_AXI_HBM0_ARUSER_WIDTH - 1:0] m_axi_HBM0_ARUSER;
input   m_axi_HBM0_RVALID;
output   m_axi_HBM0_RREADY;
input  [C_M_AXI_HBM0_DATA_WIDTH - 1:0] m_axi_HBM0_RDATA;
input   m_axi_HBM0_RLAST;
input  [C_M_AXI_HBM0_ID_WIDTH - 1:0] m_axi_HBM0_RID;
input  [C_M_AXI_HBM0_RUSER_WIDTH - 1:0] m_axi_HBM0_RUSER;
input  [1:0] m_axi_HBM0_RRESP;
input   m_axi_HBM0_BVALID;
output   m_axi_HBM0_BREADY;
input  [1:0] m_axi_HBM0_BRESP;
input  [C_M_AXI_HBM0_ID_WIDTH - 1:0] m_axi_HBM0_BID;
input  [C_M_AXI_HBM0_BUSER_WIDTH - 1:0] m_axi_HBM0_BUSER;
output   m_axi_HBM1_AWVALID;
input   m_axi_HBM1_AWREADY;
output  [C_M_AXI_HBM1_ADDR_WIDTH - 1:0] m_axi_HBM1_AWADDR;
output  [C_M_AXI_HBM1_ID_WIDTH - 1:0] m_axi_HBM1_AWID;
output  [7:0] m_axi_HBM1_AWLEN;
output  [2:0] m_axi_HBM1_AWSIZE;
output  [1:0] m_axi_HBM1_AWBURST;
output  [1:0] m_axi_HBM1_AWLOCK;
output  [3:0] m_axi_HBM1_AWCACHE;
output  [2:0] m_axi_HBM1_AWPROT;
output  [3:0] m_axi_HBM1_AWQOS;
output  [3:0] m_axi_HBM1_AWREGION;
output  [C_M_AXI_HBM1_AWUSER_WIDTH - 1:0] m_axi_HBM1_AWUSER;
output   m_axi_HBM1_WVALID;
input   m_axi_HBM1_WREADY;
output  [C_M_AXI_HBM1_DATA_WIDTH - 1:0] m_axi_HBM1_WDATA;
output  [C_M_AXI_HBM1_WSTRB_WIDTH - 1:0] m_axi_HBM1_WSTRB;
output   m_axi_HBM1_WLAST;
output  [C_M_AXI_HBM1_ID_WIDTH - 1:0] m_axi_HBM1_WID;
output  [C_M_AXI_HBM1_WUSER_WIDTH - 1:0] m_axi_HBM1_WUSER;
output   m_axi_HBM1_ARVALID;
input   m_axi_HBM1_ARREADY;
output  [C_M_AXI_HBM1_ADDR_WIDTH - 1:0] m_axi_HBM1_ARADDR;
output  [C_M_AXI_HBM1_ID_WIDTH - 1:0] m_axi_HBM1_ARID;
output  [7:0] m_axi_HBM1_ARLEN;
output  [2:0] m_axi_HBM1_ARSIZE;
output  [1:0] m_axi_HBM1_ARBURST;
output  [1:0] m_axi_HBM1_ARLOCK;
output  [3:0] m_axi_HBM1_ARCACHE;
output  [2:0] m_axi_HBM1_ARPROT;
output  [3:0] m_axi_HBM1_ARQOS;
output  [3:0] m_axi_HBM1_ARREGION;
output  [C_M_AXI_HBM1_ARUSER_WIDTH - 1:0] m_axi_HBM1_ARUSER;
input   m_axi_HBM1_RVALID;
output   m_axi_HBM1_RREADY;
input  [C_M_AXI_HBM1_DATA_WIDTH - 1:0] m_axi_HBM1_RDATA;
input   m_axi_HBM1_RLAST;
input  [C_M_AXI_HBM1_ID_WIDTH - 1:0] m_axi_HBM1_RID;
input  [C_M_AXI_HBM1_RUSER_WIDTH - 1:0] m_axi_HBM1_RUSER;
input  [1:0] m_axi_HBM1_RRESP;
input   m_axi_HBM1_BVALID;
output   m_axi_HBM1_BREADY;
input  [1:0] m_axi_HBM1_BRESP;
input  [C_M_AXI_HBM1_ID_WIDTH - 1:0] m_axi_HBM1_BID;
input  [C_M_AXI_HBM1_BUSER_WIDTH - 1:0] m_axi_HBM1_BUSER;
output   m_axi_HBM2_AWVALID;
input   m_axi_HBM2_AWREADY;
output  [C_M_AXI_HBM2_ADDR_WIDTH - 1:0] m_axi_HBM2_AWADDR;
output  [C_M_AXI_HBM2_ID_WIDTH - 1:0] m_axi_HBM2_AWID;
output  [7:0] m_axi_HBM2_AWLEN;
output  [2:0] m_axi_HBM2_AWSIZE;
output  [1:0] m_axi_HBM2_AWBURST;
output  [1:0] m_axi_HBM2_AWLOCK;
output  [3:0] m_axi_HBM2_AWCACHE;
output  [2:0] m_axi_HBM2_AWPROT;
output  [3:0] m_axi_HBM2_AWQOS;
output  [3:0] m_axi_HBM2_AWREGION;
output  [C_M_AXI_HBM2_AWUSER_WIDTH - 1:0] m_axi_HBM2_AWUSER;
output   m_axi_HBM2_WVALID;
input   m_axi_HBM2_WREADY;
output  [C_M_AXI_HBM2_DATA_WIDTH - 1:0] m_axi_HBM2_WDATA;
output  [C_M_AXI_HBM2_WSTRB_WIDTH - 1:0] m_axi_HBM2_WSTRB;
output   m_axi_HBM2_WLAST;
output  [C_M_AXI_HBM2_ID_WIDTH - 1:0] m_axi_HBM2_WID;
output  [C_M_AXI_HBM2_WUSER_WIDTH - 1:0] m_axi_HBM2_WUSER;
output   m_axi_HBM2_ARVALID;
input   m_axi_HBM2_ARREADY;
output  [C_M_AXI_HBM2_ADDR_WIDTH - 1:0] m_axi_HBM2_ARADDR;
output  [C_M_AXI_HBM2_ID_WIDTH - 1:0] m_axi_HBM2_ARID;
output  [7:0] m_axi_HBM2_ARLEN;
output  [2:0] m_axi_HBM2_ARSIZE;
output  [1:0] m_axi_HBM2_ARBURST;
output  [1:0] m_axi_HBM2_ARLOCK;
output  [3:0] m_axi_HBM2_ARCACHE;
output  [2:0] m_axi_HBM2_ARPROT;
output  [3:0] m_axi_HBM2_ARQOS;
output  [3:0] m_axi_HBM2_ARREGION;
output  [C_M_AXI_HBM2_ARUSER_WIDTH - 1:0] m_axi_HBM2_ARUSER;
input   m_axi_HBM2_RVALID;
output   m_axi_HBM2_RREADY;
input  [C_M_AXI_HBM2_DATA_WIDTH - 1:0] m_axi_HBM2_RDATA;
input   m_axi_HBM2_RLAST;
input  [C_M_AXI_HBM2_ID_WIDTH - 1:0] m_axi_HBM2_RID;
input  [C_M_AXI_HBM2_RUSER_WIDTH - 1:0] m_axi_HBM2_RUSER;
input  [1:0] m_axi_HBM2_RRESP;
input   m_axi_HBM2_BVALID;
output   m_axi_HBM2_BREADY;
input  [1:0] m_axi_HBM2_BRESP;
input  [C_M_AXI_HBM2_ID_WIDTH - 1:0] m_axi_HBM2_BID;
input  [C_M_AXI_HBM2_BUSER_WIDTH - 1:0] m_axi_HBM2_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [73:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] enc_weights;
wire   [63:0] enc_bias;
wire   [63:0] enc_input;
wire   [63:0] enc_output;
wire   [31:0] rows;
wire   [31:0] cols;
reg    HBM0_blk_n_AR;
wire    ap_CS_fsm_state2;
reg   [60:0] trunc_ln_reg_126;
reg    ap_block_state1;
wire    HBM0_AWREADY;
wire    HBM0_WREADY;
reg    HBM0_ARVALID;
wire    HBM0_ARREADY;
reg   [63:0] HBM0_ARADDR;
reg   [31:0] HBM0_ARLEN;
wire    HBM0_RVALID;
reg    HBM0_RREADY;
wire   [63:0] HBM0_RDATA;
wire   [8:0] HBM0_RFIFONUM;
wire    HBM0_BVALID;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_done;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_idle;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_ready;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWVALID;
wire   [63:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWADDR;
wire   [0:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWID;
wire   [31:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWLEN;
wire   [2:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWSIZE;
wire   [1:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWBURST;
wire   [1:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWLOCK;
wire   [3:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWCACHE;
wire   [2:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWPROT;
wire   [3:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWQOS;
wire   [3:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWREGION;
wire   [0:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWUSER;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WVALID;
wire   [63:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WDATA;
wire   [7:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WSTRB;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WLAST;
wire   [0:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WID;
wire   [0:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WUSER;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARVALID;
wire   [63:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARADDR;
wire   [0:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARID;
wire   [31:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARLEN;
wire   [2:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARSIZE;
wire   [1:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARBURST;
wire   [1:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARLOCK;
wire   [3:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARCACHE;
wire   [2:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARPROT;
wire   [3:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARQOS;
wire   [3:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARREGION;
wire   [0:0] grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARUSER;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_RREADY;
wire    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_BREADY;
reg    grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start_reg;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
wire  signed [63:0] sext_ln42_fu_116_p1;
reg   [73:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
reg    ap_ST_fsm_state74_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 74'd1;
#0 grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start_reg = 1'b0;
end

conv2d_kernel_conv2d_kernel_Pipeline_VITIS_LOOP_42_1 grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start),
    .ap_done(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_done),
    .ap_idle(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_idle),
    .ap_ready(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_ready),
    .m_axi_HBM0_AWVALID(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWVALID),
    .m_axi_HBM0_AWREADY(1'b0),
    .m_axi_HBM0_AWADDR(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWADDR),
    .m_axi_HBM0_AWID(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWID),
    .m_axi_HBM0_AWLEN(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWLEN),
    .m_axi_HBM0_AWSIZE(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWSIZE),
    .m_axi_HBM0_AWBURST(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWBURST),
    .m_axi_HBM0_AWLOCK(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWLOCK),
    .m_axi_HBM0_AWCACHE(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWCACHE),
    .m_axi_HBM0_AWPROT(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWPROT),
    .m_axi_HBM0_AWQOS(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWQOS),
    .m_axi_HBM0_AWREGION(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWREGION),
    .m_axi_HBM0_AWUSER(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_AWUSER),
    .m_axi_HBM0_WVALID(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WVALID),
    .m_axi_HBM0_WREADY(1'b0),
    .m_axi_HBM0_WDATA(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WDATA),
    .m_axi_HBM0_WSTRB(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WSTRB),
    .m_axi_HBM0_WLAST(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WLAST),
    .m_axi_HBM0_WID(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WID),
    .m_axi_HBM0_WUSER(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_WUSER),
    .m_axi_HBM0_ARVALID(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARVALID),
    .m_axi_HBM0_ARREADY(HBM0_ARREADY),
    .m_axi_HBM0_ARADDR(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARADDR),
    .m_axi_HBM0_ARID(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARID),
    .m_axi_HBM0_ARLEN(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARLEN),
    .m_axi_HBM0_ARSIZE(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARSIZE),
    .m_axi_HBM0_ARBURST(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARBURST),
    .m_axi_HBM0_ARLOCK(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARLOCK),
    .m_axi_HBM0_ARCACHE(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARCACHE),
    .m_axi_HBM0_ARPROT(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARPROT),
    .m_axi_HBM0_ARQOS(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARQOS),
    .m_axi_HBM0_ARREGION(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARREGION),
    .m_axi_HBM0_ARUSER(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARUSER),
    .m_axi_HBM0_RVALID(HBM0_RVALID),
    .m_axi_HBM0_RREADY(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_RREADY),
    .m_axi_HBM0_RDATA(HBM0_RDATA),
    .m_axi_HBM0_RLAST(1'b0),
    .m_axi_HBM0_RID(1'd0),
    .m_axi_HBM0_RFIFONUM(HBM0_RFIFONUM),
    .m_axi_HBM0_RUSER(1'd0),
    .m_axi_HBM0_RRESP(2'd0),
    .m_axi_HBM0_BVALID(1'b0),
    .m_axi_HBM0_BREADY(grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_BREADY),
    .m_axi_HBM0_BRESP(2'd0),
    .m_axi_HBM0_BID(1'd0),
    .m_axi_HBM0_BUSER(1'd0),
    .sext_ln42(trunc_ln_reg_126)
);

conv2d_kernel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .enc_weights(enc_weights),
    .enc_bias(enc_bias),
    .enc_input(enc_input),
    .enc_output(enc_output),
    .rows(rows),
    .cols(cols),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

conv2d_kernel_HBM0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 70 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_HBM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_HBM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_HBM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_HBM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_HBM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_HBM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_HBM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_HBM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_HBM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_HBM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_HBM0_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 64 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 0 ))
HBM0_m_axi_U(
    .AWVALID(m_axi_HBM0_AWVALID),
    .AWREADY(m_axi_HBM0_AWREADY),
    .AWADDR(m_axi_HBM0_AWADDR),
    .AWID(m_axi_HBM0_AWID),
    .AWLEN(m_axi_HBM0_AWLEN),
    .AWSIZE(m_axi_HBM0_AWSIZE),
    .AWBURST(m_axi_HBM0_AWBURST),
    .AWLOCK(m_axi_HBM0_AWLOCK),
    .AWCACHE(m_axi_HBM0_AWCACHE),
    .AWPROT(m_axi_HBM0_AWPROT),
    .AWQOS(m_axi_HBM0_AWQOS),
    .AWREGION(m_axi_HBM0_AWREGION),
    .AWUSER(m_axi_HBM0_AWUSER),
    .WVALID(m_axi_HBM0_WVALID),
    .WREADY(m_axi_HBM0_WREADY),
    .WDATA(m_axi_HBM0_WDATA),
    .WSTRB(m_axi_HBM0_WSTRB),
    .WLAST(m_axi_HBM0_WLAST),
    .WID(m_axi_HBM0_WID),
    .WUSER(m_axi_HBM0_WUSER),
    .ARVALID(m_axi_HBM0_ARVALID),
    .ARREADY(m_axi_HBM0_ARREADY),
    .ARADDR(m_axi_HBM0_ARADDR),
    .ARID(m_axi_HBM0_ARID),
    .ARLEN(m_axi_HBM0_ARLEN),
    .ARSIZE(m_axi_HBM0_ARSIZE),
    .ARBURST(m_axi_HBM0_ARBURST),
    .ARLOCK(m_axi_HBM0_ARLOCK),
    .ARCACHE(m_axi_HBM0_ARCACHE),
    .ARPROT(m_axi_HBM0_ARPROT),
    .ARQOS(m_axi_HBM0_ARQOS),
    .ARREGION(m_axi_HBM0_ARREGION),
    .ARUSER(m_axi_HBM0_ARUSER),
    .RVALID(m_axi_HBM0_RVALID),
    .RREADY(m_axi_HBM0_RREADY),
    .RDATA(m_axi_HBM0_RDATA),
    .RLAST(m_axi_HBM0_RLAST),
    .RID(m_axi_HBM0_RID),
    .RUSER(m_axi_HBM0_RUSER),
    .RRESP(m_axi_HBM0_RRESP),
    .BVALID(m_axi_HBM0_BVALID),
    .BREADY(m_axi_HBM0_BREADY),
    .BRESP(m_axi_HBM0_BRESP),
    .BID(m_axi_HBM0_BID),
    .BUSER(m_axi_HBM0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(HBM0_ARVALID),
    .I_CH0_ARREADY(HBM0_ARREADY),
    .I_CH0_ARADDR(HBM0_ARADDR),
    .I_CH0_ARLEN(HBM0_ARLEN),
    .I_CH0_RVALID(HBM0_RVALID),
    .I_CH0_RREADY(HBM0_RREADY),
    .I_CH0_RDATA(HBM0_RDATA),
    .I_CH0_RFIFONUM(HBM0_RFIFONUM),
    .I_CH0_AWVALID(1'b0),
    .I_CH0_AWREADY(HBM0_AWREADY),
    .I_CH0_AWADDR(64'd0),
    .I_CH0_AWLEN(32'd0),
    .I_CH0_WVALID(1'b0),
    .I_CH0_WREADY(HBM0_WREADY),
    .I_CH0_WDATA(64'd0),
    .I_CH0_WSTRB(8'd0),
    .I_CH0_BVALID(HBM0_BVALID),
    .I_CH0_BREADY(1'b0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state73)) begin
            grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start_reg <= 1'b1;
        end else if ((grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_ready == 1'b1)) begin
            grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        trunc_ln_reg_126 <= {{enc_weights[63:3]}};
    end
end

always @ (*) begin
    if (((1'b1 == HBM0_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
        HBM0_ARADDR = sext_ln42_fu_116_p1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73))) begin
        HBM0_ARADDR = grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARADDR;
    end else begin
        HBM0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == HBM0_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
        HBM0_ARLEN = 64'd225;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73))) begin
        HBM0_ARLEN = grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARLEN;
    end else begin
        HBM0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == HBM0_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
        HBM0_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73))) begin
        HBM0_ARVALID = grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_ARVALID;
    end else begin
        HBM0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state73))) begin
        HBM0_RREADY = grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_m_axi_HBM0_RREADY;
    end else begin
        HBM0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        HBM0_blk_n_AR = m_axi_HBM0_ARREADY;
    end else begin
        HBM0_blk_n_AR = 1'b1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b0 == HBM0_ARREADY)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

always @ (*) begin
    if ((grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_done == 1'b0)) begin
        ap_ST_fsm_state74_blk = 1'b1;
    end else begin
        ap_ST_fsm_state74_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == HBM0_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start = grp_conv2d_kernel_Pipeline_VITIS_LOOP_42_1_fu_99_ap_start_reg;

assign m_axi_HBM1_ARADDR = 64'd0;

assign m_axi_HBM1_ARBURST = 2'd0;

assign m_axi_HBM1_ARCACHE = 4'd0;

assign m_axi_HBM1_ARID = 1'd0;

assign m_axi_HBM1_ARLEN = 8'd0;

assign m_axi_HBM1_ARLOCK = 2'd0;

assign m_axi_HBM1_ARPROT = 3'd0;

assign m_axi_HBM1_ARQOS = 4'd0;

assign m_axi_HBM1_ARREGION = 4'd0;

assign m_axi_HBM1_ARSIZE = 3'd0;

assign m_axi_HBM1_ARUSER = 1'd0;

assign m_axi_HBM1_ARVALID = 1'b0;

assign m_axi_HBM1_AWADDR = 64'd0;

assign m_axi_HBM1_AWBURST = 2'd0;

assign m_axi_HBM1_AWCACHE = 4'd0;

assign m_axi_HBM1_AWID = 1'd0;

assign m_axi_HBM1_AWLEN = 8'd0;

assign m_axi_HBM1_AWLOCK = 2'd0;

assign m_axi_HBM1_AWPROT = 3'd0;

assign m_axi_HBM1_AWQOS = 4'd0;

assign m_axi_HBM1_AWREGION = 4'd0;

assign m_axi_HBM1_AWSIZE = 3'd0;

assign m_axi_HBM1_AWUSER = 1'd0;

assign m_axi_HBM1_AWVALID = 1'b0;

assign m_axi_HBM1_BREADY = 1'b0;

assign m_axi_HBM1_RREADY = 1'b0;

assign m_axi_HBM1_WDATA = 32'd0;

assign m_axi_HBM1_WID = 1'd0;

assign m_axi_HBM1_WLAST = 1'b0;

assign m_axi_HBM1_WSTRB = 4'd0;

assign m_axi_HBM1_WUSER = 1'd0;

assign m_axi_HBM1_WVALID = 1'b0;

assign m_axi_HBM2_ARADDR = 64'd0;

assign m_axi_HBM2_ARBURST = 2'd0;

assign m_axi_HBM2_ARCACHE = 4'd0;

assign m_axi_HBM2_ARID = 1'd0;

assign m_axi_HBM2_ARLEN = 8'd0;

assign m_axi_HBM2_ARLOCK = 2'd0;

assign m_axi_HBM2_ARPROT = 3'd0;

assign m_axi_HBM2_ARQOS = 4'd0;

assign m_axi_HBM2_ARREGION = 4'd0;

assign m_axi_HBM2_ARSIZE = 3'd0;

assign m_axi_HBM2_ARUSER = 1'd0;

assign m_axi_HBM2_ARVALID = 1'b0;

assign m_axi_HBM2_AWADDR = 64'd0;

assign m_axi_HBM2_AWBURST = 2'd0;

assign m_axi_HBM2_AWCACHE = 4'd0;

assign m_axi_HBM2_AWID = 1'd0;

assign m_axi_HBM2_AWLEN = 8'd0;

assign m_axi_HBM2_AWLOCK = 2'd0;

assign m_axi_HBM2_AWPROT = 3'd0;

assign m_axi_HBM2_AWQOS = 4'd0;

assign m_axi_HBM2_AWREGION = 4'd0;

assign m_axi_HBM2_AWSIZE = 3'd0;

assign m_axi_HBM2_AWUSER = 1'd0;

assign m_axi_HBM2_AWVALID = 1'b0;

assign m_axi_HBM2_BREADY = 1'b0;

assign m_axi_HBM2_RREADY = 1'b0;

assign m_axi_HBM2_WDATA = 64'd0;

assign m_axi_HBM2_WID = 1'd0;

assign m_axi_HBM2_WLAST = 1'b0;

assign m_axi_HBM2_WSTRB = 8'd0;

assign m_axi_HBM2_WUSER = 1'd0;

assign m_axi_HBM2_WVALID = 1'b0;

assign sext_ln42_fu_116_p1 = $signed(trunc_ln_reg_126);

endmodule //conv2d_kernel
